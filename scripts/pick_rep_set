#!/usr/bin/env python
# File created on 09 Feb 2010
from __future__ import division

__author__ = "Greg Caporaso"
__copyright__ = "Copyright 2010, The QIIME project"
__credits__ = ["Greg Caporaso"]
__license__ = "GPL"
__version__ = "1.0-dev"
__maintainer__ = "Greg Caporaso"
__email__ = "gregcaporaso@gmail.com"
__status__ = "Pre-release"

from qiime.util import parse_command_line_parameters
from optparse import make_option
from qiime.pick_rep_set import rep_set_picking_methods

script_description = """Pick a representative set of sequences from an OTU map
(i.e., the output of pick_otus: list of otu_id to seq_ids) and a fasta file 
containing all seq_ids. 
"""

script_usage = """Create a representative set fasta file at seqs.fasta_rep_set.fasta 
  (default, overwrite with -o) using the OTU file otus.txt (-i) and the 
  sequence file seqs.fasta (-f). Representative sequences will be chosen as 
  those most abundant in seqs.fasta (default, overwrite with -m). Output 
  sequences will be sorted by OTU identifier (default, overwrite with -s). No 
  log file will be written (defualt, overwrite with -l).
 
 python ~/code/Qiime/trunk/qiime/pick_rep_set.py -i otus.txt -f seqs.fasta
"""

required_options = [\
 make_option('-i','--input_file',action='store',\
          type='string',dest='otu_fp',help='Path to read '+\
          'input otu file [REQUIRED]'),\
 make_option('-f','--fasta_file',action='store',\
          type='string',dest='fasta_fp',help='Path to read '+\
          'fasta file [REQUIRED]')
]

rep_set_picking_method_choices = rep_set_picking_methods.keys()
optional_options = [\
 make_option('-m','--rep_set_picking_method',\
          type='choice',dest='rep_set_picking_method',
          help='Method for picking'+\
          ' representative sets [default: %default]',\
          choices=rep_set_picking_method_choices,default='most_abundant'),\
 make_option('-o','--result_fp',action='store',\
          type='string',dest='result_fp',help='Path to store '+\
          'result file [default: <input_sequences_filepath>_rep_set.fasta]'),\
 make_option('-l','--log_fp',action='store',\
          type='string',dest='log_fp',help='Path to store '+\
          'log file [default: No log file created.]'),\
 make_option('-s', '--sort_by', action='store',\
            type='string',dest='sort_by', default='otu',
            help = 'sort by otu or seq_id [default: %default]')
]


def main():
    option_parser, opts, args = parse_command_line_parameters(
      script_description=script_description,
      script_usage=script_usage,
      version=__version__,
      required_options=required_options,
      optional_options=optional_options)
      
    rep_set_picker =\
     rep_set_picking_methods[opts.rep_set_picking_method]
     
    input_seqs_filepath = opts.fasta_fp

    input_otu_filepath = opts.otu_fp
   
    result_path = opts.result_fp or\
     '%s_rep_set.fasta' % input_seqs_filepath
     
    log_path = opts.log_fp
    
    rep_set_picker(input_seqs_filepath, input_otu_filepath,
     result_path=result_path,log_path=log_path, sort_by=opts.sort_by)


if __name__ == "__main__":
    main()