.. _essential_files:

===========
Input Files
===========

File Format Details
-------------------

These are general guidelines that apply to multiple files:

1. Files should have proper file type suffix. For example, ``.fna`` or ``.fasta`` for FASTA files; ``.qual`` for quality score files; ``.sff`` for sff files; ``.txt`` for mapping files.
2. Do not use spaces in your filenames. Use underscores or MixedCase instead. For example: :file:`amazon soil.fna` is not allowed -- instead use :file:`amazon_soil.fna` or :file:`AmazonSoil.fna`.
3. In general, edit your files with a text editor such as TextEdit or TextMate (on Mac), gedit (on Linux), vim, or emacs, but not Microsoft Word, which is a `word processor <http://en.wikipedia.org/wiki/Word_processor>`_, not a `text editor <http://en.wikipedia.org/wiki/Text_editor>`_. Mapping files and OTU tables can be edited in Microsoft Excel, but should always be saved as tab-delimited text.

Demultiplexed sequences
^^^^^^^^^^^^^^^^^^^^^^^

Demultiplexed sequence files are passed to ``pick_otus.py``, and used when skipping the ``split_libraries.py`` step when your sequences are already demultiplexed.

JESSE, ADD YOUR TEXT HERE.


Metadata mapping files
^^^^^^^^^^^^^^^^^^^^^^

Metadata mapping files are used through-out Qiime, and provide per-sample metadata. These are used in ``split_linraries.py``, ``beta_diversity_through_3d_plots.py``, ``alpha_rarefaction.py`` and other scripts.

TONY, ADD YOUR TEXT HERE POSSIBLY REPLACING ANY/ALL OF THE TEXT BELOW.

The mapping file is generated by the user. This file contains all of the information about the sequences necessary to perform the data analysis: the name of each sample (SampleID), the DNA barcode used for each sample (BarcodeSequence), the linker and primer sequence used to amplify a given sample (LinkerPrimerSequence), any metadata that relates to the samples (for instance, health status or sampling site), and any additional information relating to specific samples that may be useful to have at hand when considering outliers (for example, what medications a patient was taking at time of sampling). See format specifications below.

The first few lines of a mapping file must look like the following:

.. note::

	* #SampleID	BarcodeSequence	LinkerPrimerSequence	HostMood	Description
	* #Example mapping file for QIIME.  Notes may be added on this line.
	* sample1	AGCACGAGCCTA	YATGCTGCCTCCCGTAGGAGT	tired		ear_sample_from_subject228
	* ...

You are strongly encouraged to validate your mapping file using :file:`check_id_map.py` before attempting to analyze your data. This tool will check for errors and make suggestions for other aspects of the file to be edited. Errors and warnings will be written to a log file and suggested corrections will be written to a :file:`_corrected.txt` version of the mapping file, both located in the specified output directory. Currently, the number of valid characters in the headers and data of the mapping file are quite restricted to ensure compatibility with downstream programs. For headers, only alphanumeric and underscores are accepted. Sample IDs, descriptions, and other metadata additionally accept the following characters: .+-%. Barcodes and linker/primer sequences must be IUPAC DNA characters. If invalid characters are found, the :file:`_corrected.txt` output file will have each of these replaced with an underscore.

The mapping file relates barcodes in the FASTA file to each sample and their related metadata. Each FASTA file must have at least one mapping file but multiple mapping files can be defined for any given FASTA file. For example, if you have bundled several unrelated studies into one 454 run (for instance, a mouse study, a soil study and a fish study), and need to analyze each study separately, you would generate three separate mapping files that specify a subset of samples and their associated metadata. Alternatively, you can combine multiple runs (e.g. multiple 454 runs, multiple FASTA files) with a single mapping file.

The mapping file is organized to contain data in columns with headers. As such, it is usually generated by users in Excel. However, it cannot be submitted in Excel format, it must be submitted in tab-delimited text format. Simply saving an excel spreadsheet in tab-delimited text format may be problematic because it will include extra trailing empty columns. One way around this is to copy and paste the highlighted data into a more simple text editing program.

The mapping file format is tab-delimited text. This must be plain text, therefore Word and Excel documents cannot be read directly. The first line of the mapping file is the header line and it MUST start with a "#" character. Optionally, lines immediately following the header line that start with a "#" character will be treated as run description lines. This section is for descriptions that apply to all samples in the mapping file (as opposed to / in addition to the descriptions that apply to each individual sample).

Each column header MUST contain alphanumeric (a-z, A-Z and 1-9) and/or underscore ("_") characters only, where the header MUST start with letter. All other characters (e.g. $, \*, \^, etc) are not supported at this time and use of those characters may cause problems downstream in the QIIME pipeline. Sample IDs, descriptions, and metadata fields additionally allow the use of plus(+), minus(-), period(.), and percent (%) characters.

Currently, the user has the ability to define their own column headers, however; QIIME will be adopting the MIENS standard, therefore all column headings MUST correspond the proper MIENS nomenclature (http://gensc.org/gc_wiki/index.php/MIENS). The following details the current mapping file guidelines:

1. The first column header must be "#SampleID", and the data in this column must contain unique (short and meaningful) sample identifiers containing only alphanumeric and period (".") characters.
2. The second column header must be "BarcodeSequence", where each value in that column corresponds to the barcode used for each sample.  Only IUPAC DNA characters are acceptable.
3. The third column header must be “LinkerPrimerSequence”, where each value in that column corresponds to the primer used to amplify that sample.  Only IUPAC DNA characters are acceptable.
4. All subsequent column headers (except the last one) are metadata headers. For example, a "Smoker" column would include either "Yes" or "No". Note that the data in each column is assumed to be categorical unless specified otherwise. Categorical data columns must include at least 2 unique values per column. All metadata must be composed of only alphanumeric, underscore ("_"), period ("."), minus sign ("-"), plus sign ("+") and/or percentage ("%") characters. For missing data, write "NA"; do not leave blanks.
5. The last column of the mapping file must be named "Description". Information in this column includes information that is unique to each sample, such as the medications taken by the patient, or any other descriptive information. The same character restrictions that apply to the metadata columns in guildline four apply to sample descriptions.  Sample/Run Description should be kept brief, if possible. Information that applies to all samples in a mapping file should go in the run description section, which is defined as lines starting with a "#" character, immediately following the header line (See example format below.) Information that is specific to a particular sample should go in the "Description" column.
6. There should be no empty lines or comment lines (starting with #) throughout the metadata, with the exception of any additional run description lines that immediately follow the initial header line.

Notes for more than one mapping or FASTA file at once:

1. If you want to use a single mapping file with multiple FASTA files, MAKE SURE NO BARCODES ARE REPEATED BETWEEN THE RUNS.
2. If you are providing multiple mapping files for a single FASTA file, make sure that use of column headers is consistent across all files. (Case-sensitive!) E.g. "Barcode" is not the same as "BarCode" is not the same as "barcode" is not the same as "Bar_code".

Example Mapping Files:

1. Mapping file with a unique "Description" column:

.. note::

	* #SampleID	BarcodeSequence	LinkerPrimerSequence	AnimalDiet	...	Description
	* A			CGAGTCTAGTTG	YATGCTGCCTCCCGTAGGAGT	Carnivore	...	Lion_11 
	* B			CCGACTGAGATG	YATGCTGCCTCCCGTAGGAGT	Herbivore	...	Kangaroo_3
	* C			TCGCCTGAGATG	YATGCTGCCTCCCGTAGGAGT	Omnivore	...	Human_34
	* ...

2. Mapping file with "run description" lines following the "header line":

.. note::

	* #SampleID	BarcodeSequence	LinkerPrimerSequence	AnimalDiet	...	Description
	* # This is a "run description" example. It can span as many lines as needed
	* # before the rest of the mapping file starts. Each line must begin with
	* # the pound '#' character. You do not have to wrap your lines but it may make
	* # your "run description" section easier to read.
	* # The run description should contain a general description of the run
	* # and details that might be useful in interpreting the results such as:
	* # 1) what type of samples are in this run, 2) where and when they were collected,
	* # 3) how they were prepped, 4) what type of barcodes and primers were used
	* # 5) where they were sequenced (e.g. facility) or collected from
	* # (e.g. public databases), 6) what you are expecting/hoping to find in the run
	* # 7) any possible problems (technical e.g. during prep/sequencing, experimental
	* # etc) 8) etc.
	* # The description in this section will be applied to any individual samples
	* # that are missing a value in the 'Description' column
	* #SampleID	BarcodeSequence	LinkerPrimerSequence	AnimalDiet	...	Description
	* A			CGAGTCTAGTTG	YATGCTGCCTCCCGTAGGAGT	Carnivore	...	Lion_11 
	* B			CCGACTGAGATG	YATGCTGCCTCCCGTAGGAGT	Herbivore	...	Kangaroo_3
	* C			TCGCCTGAGATG	YATGCTGCCTCCCGTAGGAGT	Omnivore	...	Human_34
	* ...

OTU table
^^^^^^^^^^

OTU tables are sample x observation matrices, and are central to a lot of downstream analysis in QIIME. These are generated by ``pick_otus_through_otu_table.py`` but can also be generated externally from QIIME (e.g., exported from MG-RAST for metagenomic analysis with QIIME). These are used in scripts such as ``beta_diversity_through_3d_plots.py``, ``alpha_rarefaction.py``, and ``summarize_taxa.py``.

JESSE, ADD YOUR TEXT HERE.

ID-to-taxonomy map
^^^^^^^^^^^^^^^^^^

ID-to-taxonomy maps are pass to ``assign_taxonomy.py -m blast`` via the ``-t/--id_to_taxonomy_fp`` option with an associated fasta file passed via ``-r/--reference_seqs_fp``.

TONY, ADD YOUR TEXT HERE.

We have pre-constructed examples of these files based on the Greengenes database. These can be found in the ``taxonomies`` directory of the `GG OTUs zip file`_ and can be used with the unaligned fasta file in the ``rep_set`` directory in the same zip file. Review the ``notes.txt`` file in the zip file for details about those files.

Qiime parameters
^^^^^^^^^^^^^^^^

The QIIME parameters files is used to pass per-script parameters to the QIIME 'workflow' scripts. An example is provided as ``Qiime/qiime_parameters.txt``.

This file is used to give workflow script users control over the parameters to the individual scripts without having an extremely complex and hard to maintain interface to the workflow scripts. Users should copy the example ``qiime_parameters.txt`` script to the directory where they are performing their analysis, and edit the values in this file accordingly. This copy will be referred to as the user's working ``qiime_parameters.txt`` file. The parameters are defined as ``script_name:parameter_name``, followed by a tab, and then the value. For example::
	
	align_seqs:alignment_method	pynast

This indicates that the ``--alignment_method`` will be set to ``pynast`` when calling ``align_seqs.py``. To get information on what a parameter in the ``qiime_parameters.txt`` file is, you should call the script name followed by ``-h`` to access the usage information for that script. In the above example, you could call::
	
	python align_seqs.py -h

Boolean options are specified by passing ``True`` or ``False`` after the tab. For example::
	
	parallel:retain_temp_files	False
	
When a parameter is not followed by an option, that indicates that it will not be passed to the script resulting in the default value being used instead. For example::
	
	align_seqs:blast_db

This results in no ``--blast_db`` parameter being passed to ``align_seqs.py``. Alternatively, you can delete this line from your working ``qiime_parameters.txt`` file.

You can find information on the QIIME workflow scripts at:

	* `pick_otus_through_otu_table.py <../scripts/pick_otus_through_otu_table.html>`_
	* `alpha_rarefaction.py <../scripts/alpha_rarefaction.html>`_
	* `beta_diversity_through_3d_plots.py <../scripts/beta_diversity_through_3d_plots.html>`_
	* `jackknifed_beta_diversity.py <../scripts/jackknifed_beta_diversity.html>`_





.. _GG OTUs zip file: http://greengenes.lbl.gov/Download/OTUs/gg_otus_6oct2010.zip

